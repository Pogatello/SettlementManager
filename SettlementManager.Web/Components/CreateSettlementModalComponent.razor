@using SettlementManager.Contract
@using SettlementManager.Messaging.Request
@using SettlementManager.Messaging.View
@using SettlementManager.Model
@using SettlementManager.Web.Pages

@inject ISettlementService _settlementService;


<h1>dfdklsfgjdskldsjflkdsjflsdjlk</h1>
<div class="modal" tabindex="-1">
    <div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Create Settlement</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="Close"></button>
        </div>
        <div class="modal-body">
          <p>Modal body text goes here.</p>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="Close">Close</button>
            <button type="button" class="btn btn-primary" @onclick="CreateSettlement">Save changes</button>
        </div>
    </div>
    </div>
</div>


@code {
    [CascadingParameter]
    private Settlements _Parent { get; set; }

    [CascadingParameter]
    private bool ShowCreateSettlementModal { get; set; }

    private Settlement NewSettlement { get; set; }


    protected override async Task OnInitializedAsync()
    {
        var a = 2;
    }

    private async Task CreateSettlement()
    {
        await _settlementService.CreateSettlementAsync(
        new CreateSettlementRequest
            {
                Settlement = new CreateSettlementView
                {
                    Name = NewSettlement.Name,
                    PostalCode = NewSettlement.PostalCode,
                    CountryId = NewSettlement.Country.Id,
                }
            });
    }

    private void Close()
    {
        ShowCreateSettlementModal = false;
    }
}
